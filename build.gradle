
repositories {

    jcenter()

}

allprojects {

    group = 'org.sugarcubes'
    version = '0.1.0-SNAPSHOT'

    apply plugin: 'idea'
    apply plugin: 'maven'

    ext.libs = [:]
    ext.versions = [:]

    libs.javax_servlet = "javax.servlet:javax.servlet-api:3.1.0"
    libs.javax_mail = "javax.mail:mail:1.4.1"
    libs.javax_validation = "javax.validation:validation-api:2.0.1.Final"
    libs.javax_annotation = "javax.annotation:javax.annotation-api:1.3.2"
    libs.javax_jms = "javax.jms:javax.jms-api:2.0.1"
    libs.javax_inject = "javax.inject:javax.inject:1"

    libs.objenesis = "org.objenesis:objenesis:2.5.1"

    libs.guava = "com.google.guava:guava:21.0"

    libs.commons_lang3 = "org.apache.commons:commons-lang3:3.5"

    libs.aopalliance = "aopalliance:aopalliance:1.0"

    versions.spring = '4.3.7.RELEASE'
    libs.spring = [
        libs.spring_aop = "org.springframework:spring-aop:${versions.spring}",
        libs.spring_aspects = "org.springframework:spring-aspects:${versions.spring}",
        libs.spring_beans = "org.springframework:spring-beans:${versions.spring}",
        libs.spring_context = "org.springframework:spring-context:${versions.spring}",
        libs.spring_context_support = "org.springframework:spring-context-support:${versions.spring}",
        libs.spring_core = "org.springframework:spring-core:${versions.spring}",
        libs.spring_expression = "org.springframework:spring-expression:${versions.spring}",
        libs.spring_instrument = "org.springframework:spring-instrument:${versions.spring}",
        libs.spring_instrument_tomcat = "org.springframework:spring-instrument-tomcat:${versions.spring}",
        libs.spring_jdbc = "org.springframework:spring-jdbc:${versions.spring}",
        libs.spring_jms = "org.springframework:spring-jms:${versions.spring}",
        libs.spring_orm = "org.springframework:spring-orm:${versions.spring}",
        libs.spring_oxm = "org.springframework:spring-oxm:${versions.spring}",
        libs.spring_tx = "org.springframework:spring-tx:${versions.spring}",
        libs.spring_web = "org.springframework:spring-web:${versions.spring}",
        libs.spring_webmvc = "org.springframework:spring-webmvc:${versions.spring}",
        libs.spring_webmvc_portlet = "org.springframework:spring-webmvc-portlet:${versions.spring}",
    ]
    libs.spring_test = "org.springframework:spring-test:${versions.spring}"

    versions.aopalliance = '1.0'
    libs.aopalliance = "aopalliance:aopalliance:${versions.aopalliance}"

    versions.aspectj = '1.8.5'
    libs.aspectj = [
        libs.aspectj_rt = "org.aspectj:aspectjrt:${versions.aspectj}",
        libs.aspectj_weaver = "org.aspectj:aspectjweaver:${versions.aspectj}",
        libs.aspectj_tools = "org.aspectj:aspectjtools:${versions.aspectj}",
    ]

    versions.cglib = '3.2.5'
    libs.cglib = "cglib:cglib:${versions.cglib}"

    versions.javassist = '3.21.0-GA'
    libs.javassist = "org.javassist:javassist:${versions.javassist}"

    versions.bcel = '6.0'
    libs.bcel = "org.apache.bcel:bcel:${versions.bcel}"

    versions.asm = '5.2'
    libs.asm_all = [
        libs.asm = "org.ow2.asm:asm:${versions.asm}",
        libs.asm_util = "org.ow2.asm:asm-util:${versions.asm}",
    ]

    libs.bytebuddy = 'net.bytebuddy:byte-buddy:1.6.11'

    versions.dexmaker = '1.2'
    libs.dexmaker = "com.google.dexmaker:dexmaker:${versions.dexmaker}"
    libs.dexmaker_mockito = "com.google.dexmaker:dexmaker-mockito:${versions.dexmaker}"

    libs.junit = "junit:junit:4.12"

    libs.mockito = "org.mockito:mockito-core:2.7.17"

    versions.hamcrest = "1.3"
    libs.hamcrest = [
        libs.hamcrest_core = "org.hamcrest:hamcrest-core:${versions.hamcrest}",
        libs.hamcrest_library = "org.hamcrest:hamcrest-library:${versions.hamcrest}",
    ]
    libs.hamcrest_all = "org.hamcrest:hamcrest-all:${versions.hamcrest}"

    libs.test = [
        libs.junit,
        libs.mockito,
        libs.hamcrest,
        libs.spring_test,
    ]

}

configure(rootProject) {

    idea.project.languageLevel = '1.8'

}

subprojects {

}

def configureJavaModule(Project project) {
    configure(project, configureJavaModuleClosure)
}

ext.configureJavaModuleClosure = {

    repositories {

        jcenter()

    }

    apply plugin: 'java'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    [compileJava, compileTestJava]*.options*.encoding = 'utf-8'

    configurations {

        testCompile.extendsFrom compileOnly

    }

    dependencies {

        testCompile libs.test

    }

    jar {
        manifest {
            attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Implementation-Vendor': 'Symmetric Systems',
                'Implementation-Vendor-Id': project.group,
            )
        }
    }

}
